(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{608:function(t,a,e){"use strict";e.r(a);var i=e(13),s=Object(i.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" git")]),t._v(" "),e("h2",{attrs:{id:"安装与配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装与配置"}},[t._v("#")]),t._v(" 安装与配置")]),t._v(" "),e("p",[t._v("第一次运行时，安装后进行用户名与邮箱的配置")]),t._v(" "),e("div",{staticClass:"language-buildoutcfg extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ git config --global user.name "Your Name"\n$ git config --global user.email "email@example.com"\n')])])]),e("p",[e("code",[t._v("git init")]),t._v("将一个目录初始化为一个git repo")]),t._v(" "),e("p",[e("code",[t._v("git add <file>")]),t._v(" 添加文件")]),t._v(" "),e("p",[e("code",[t._v("git commit -m <message>")]),t._v("将文件提交到仓库")]),t._v(" "),e("h2",{attrs:{id:"关于版本退回的知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于版本退回的知识"}},[t._v("#")]),t._v(" 关于版本退回的知识：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git status  查看各个文件的状态是否更新\ngit diff    查看修改的变化；\ngit log     查看日志，按照从最近到以前是顺序排列\ngit log --pretty=oneline：查看日志且只显示版本号的版本；\ngit reset --hard HEAD^/HEAD^^ 回退上一个版本/回退上上个版本 ^个表示回退n个以前的版本\ngit reset --hard commit id 回退到指定commit id的版本；\ngit reflog 可以查看所有历史变化日志；\n\n回退远程分支\ngit reset --hard commit id 本地分支回退\ngit push -f origin 分支名    强制推送\n")])])]),e("h2",{attrs:{id:"工作区和暂存区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作区和暂存区"}},[t._v("#")]),t._v(" 工作区和暂存区：")]),t._v(" "),e("p",[t._v("工作区：就是本文件夹")]),t._v(" "),e("p",[t._v("版本库：.git文件夹")]),t._v(" "),e("p",[t._v("暂存区：.git文件夹里面的stage")]),t._v(" "),e("h2",{attrs:{id:"分支管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支管理"}},[t._v("#")]),t._v(" 分支管理")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("创建方法1：git checkout -b 新分支名\n创建方法2：git branch 新分支名  然后 git checkout 该新分支名\ngit branch 显示本地所有的分支\ngit checkout 分支名 //切换分支\ngit merge 分支名 //将该分支合并到当前分支\ngit branch -d 分支名 //删除分支\ngit branch -a 显示所有分支，包括远程分支\ngit remote -v 显示远程分支\ngit remote add upstream http://..... 添加上游项目\ngit pull upstream 分支名 拉取上游分支，更新本地项目\n拉取远程分支并创建本地分支\n    git checkout -b 本地分支名x origin/远程分支名x .    本地新建分支x，并自动切换到该本地分支x。\n    git fetch origin 远程分支名x:本地分支名x.         本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);