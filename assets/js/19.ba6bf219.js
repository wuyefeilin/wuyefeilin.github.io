(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{148:function(a,t,s){"use strict";s.r(t);var e=s(2),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"vim的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim的使用"}},[a._v("#")]),a._v(" vim的使用")]),a._v(" "),s("h2",{attrs:{id:"替换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#替换"}},[a._v("#")]),a._v(" 替换")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("%s/aaa/bbb/g\n.,$s/aaa/bbb/g\n,$s/aaa/bbb/g\n1,$s/aaa/bbb/g\n")])])]),s("p",[a._v("s 替换; % 全文; $ 最后一行; 1 第一行;\ng global? 就是在前面制定的行中替换所有匹配的字符串，如果不加这个就只匹配每一行中的第一个，此处还可以用c p\nc 每次替换前会确认\np 不知道。。")]),a._v(" "),s("h2",{attrs:{id:"批量缩进与反缩进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#批量缩进与反缩进"}},[a._v("#")]),a._v(" 批量缩进与反缩进")]),a._v(" "),s("p",[a._v("*按下v\n*按上下键选中多行\n*"),s("code",[a._v(">")]),a._v("缩进, "),s("code",[a._v("<")]),a._v("反缩进")])])}),[],!1,null,null,null);t.default=r.exports}}]);